name: Main
on:
  push:
    branches: [ main, develop, test_workflow ]
  pull_request:
    branches: [ main, develop, test_workflow ]
  workflow_dispatch:

jobs:
  windows:
    runs-on: windows-2022
    
    strategy:
      matrix:
        configuration: [Debug, Release]
        platform: [x64, x86]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Update Submodules
        run: git submodule update --init --recursive

      - name: Setup MSBuild and add to PATH
        uses: microsoft/setup-msbuild@v1.1
        
      - name: Install Cache
        uses: actions/cache@v2
        id: install-cache
        with:
          path: |
            ./Engine/Build/Windows/CMake/*
            ./Engine/Build/Windows/Ninja/*
            ./Engine/Build/Windows/vswhere/*
          key: install-cache-v0
        
      - name: Install
        if: steps.install-cache.outputs.cache-hit != 'true'
        working-directory: .\Engine\Build\Windows\
        run: |
          .\InstallCMake.bat
          .\InstallNinja.bat
          .\InstallVSWhere.bat
          
      - name: Build
        working-directory: .\Engine\Build\Windows\
        run: .\Build.bat ${{ matrix.platform }} ${{ matrix.configuration }}

      - name: Test
        working-directory: .\Engine\Build\Windows\
        run: .\Test.bat ${{ matrix.platform }} ${{ matrix.configuration }}

  #linux:
  #  runs-on: ubuntu-20.04
  #  strategy:
  #    matrix:
  #      configuration: [Debug, Release]
  #      platform: [x86_64, aarch64]

  #  steps:
  #    - name: Checkout
  #      uses: actions/checkout@v2
        
  #    - name: Install packages
  #      run: |
  #        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
  #        sudo apt-get install build-essential autoconf libtool pkg-config
  #        sudo apt update
  #        sudo apt install ninja-build
  #        sudo apt install libx11-dev

  #    - name: Install Cache
  #      uses: actions/cache@v2
  #      id: install-cache-linux
  #      with:
  #        path: |
  #          ./Engine/Build/Linux/CMake/*
  #          ./Engine/Build/Linux/Ninja/*
  #          ./Engine/Build/Linux/vswhere/*
  #        key: install-cache-linux-v0

  #    - name: Install
  #      if: steps.install-cache-linux.outputs.cache-hit != 'true'
  #      working-directory: ./Engine/Build/Linux/
  #      run: |
  #        chmod +x install-cmake.sh && ./install-cmake.sh
  #        chmod +x install-ninja.sh && ./install-ninja.sh

  #    - name: Build
  #      working-directory: ./Engine/Build/Linux/
  #      run: chmod +x build.sh && ./build.sh ${{ matrix.platform }} ${{ matrix.configuration }}

  #    - name: Test
  #      working-directory: ./Engine/Build/Linux/
  #      run: chmod +x test.sh && ./test.sh ${{ matrix.platform }} ${{ matrix.configuration }}

