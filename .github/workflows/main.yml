name: Main
on:
  push:
    branches: [ main, develop, test_workflow, develop_android ]
  pull_request:
    branches: [ main, develop, test_workflow, develop_android ]
  workflow_dispatch:

jobs:
  windows:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2022, windows-2019]
        cxx_standard: [17, 20]
        configuration: [Debug, Release]
        platform: [x64, x86]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Update Submodules
        run: git submodule update --init --recursive

      - name: Setup MSBuild and add to PATH
        uses: microsoft/setup-msbuild@v1.1
        
      - name: Install Cache
        uses: actions/cache@v2
        id: install-cache
        with:
          path: |
            ./Engine/Build/Windows/Ninja/*
            ./Engine/Build/Windows/vswhere/*
          key: install-cache-v0
        
      - name: Install
        if: steps.install-cache.outputs.cache-hit != 'true'
        working-directory: .\Engine\Build\Windows
        run: |
          .\InstallNinja.bat
          .\InstallVSWhere.bat
          
      - name: Build
        working-directory: .\Engine\Build\Windows
        run: .\Build.bat ${{ matrix.platform }} ${{ matrix.configuration }} ${{ matrix.cxx_standard }}

      - name: Test
        working-directory: .\Engine\Build\Windows
        run: .\Test.bat ${{ matrix.platform }} ${{ matrix.configuration }} ${{ matrix.cxx_standard }}

  linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        compiler:
          - { cc: "gcc-10",   cxx: "g++-10"     }
          - { cc: "gcc-9",    cxx: "g++-9"      }
          - { cc: "clang-12", cxx: "clang++-12" }
          - { cc: "clang-11", cxx: "clang++-11" }
          - { cc: "clang-10", cxx: "clang++-10" }
        cxx_standard: [17, 20]
        configuration: [Debug, Release]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Update Submodules
        run: git submodule update --init --recursive

      - name: Install package
        run: |
          sudo apt-get install ninja-build

      - name: Make build directory
        working-directory: ./Engine/Build
        run: |
          mkdir Linux

      - name: Configure CMake
        working-directory: ./Engine/Build/Linux
        run: |
          cmake \
          -GNinja \
          -H${{github.workspace}}/Engine/Source \
          -Bbuild \
          -DCMAKE_CXX_COMPILER=${{ matrix.compiler.cxx }} \
          -DCMAKE_C_COMPILER=${{ matrix.compiler.cc }} \
          -DCMAKE_CXX_STANDARD=${{ matrix.cxx_standard }} \
          -DCMAKE_BUILD_TYPE=${{ matrix.configuration }} \
          -DRING_BUILD_TEST=true

      - name: Build
        working-directory: ./Engine/Build/Linux
        run: |
          cmake --build build --config ${{ matrix.configuration }}

      - name: Test
        working-directory: ./Engine/Build/Linux/build
        run: |
          xvfb-run ctest -j 4 -C ${{ matrix.configuration }}


  android:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        api-level: [21]
        ndk: [21.4.7075529]
        abi: [x86_64]
        cxx_standard: [Cxx17, Cxx20]
        configuration: [Debug, Release]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Update Submodules
        run: git submodule update --init --recursive

      - name: Install package
        run: |
          brew install ninja

      - name: Setup Java 11
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Gradle cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}

      - name: AVD cache
        uses: actions/cache@v2
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}-${{ matrix.abi }}

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          arch: ${{ matrix.abi }}
          profile: Nexus 6
          api-level: ${{ matrix.api-level }}
          ndk: ${{ matrix.ndk }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: Grant execution authority
        working-directory: ./Engine/Build/Android/Tools
        run: |
          chmod +x ./test_runner.sh

      - name: Build
        working-directory: ./Engine/Build/Android/RingRuntimeApp
        run: |
          chmod +x ./gradlew
          ./gradlew --no-daemon assemble${{ matrix.cxx_standard }}RuntimeTest${{ matrix.configuration }}

      - name: Test
        uses: reactivecircus/android-emulator-runner@v2
        with:
          arch: ${{ matrix.abi }}
          profile: Nexus 6
          api-level: ${{ matrix.api-level }}
          ndk: ${{ matrix.ndk }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: |
            cd ${{ github.workspece }}/Engine/Build/Android/Tools || exit 1
            chmod +x ./ctest.sh
            ./ctest.sh -j 4 -C ${{ matrix.configuration }}
