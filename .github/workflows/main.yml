name: Main
on:
  push:
    branches: [ main, develop, test_workflow ]
  pull_request:
    branches: [ main, develop, test_workflow ]
  workflow_dispatch:

jobs:
  windows:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2022, windows-2019]
        cxx_standard: [17, 20]
        configuration: [Debug, Release]
        platform: [x64, x86]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Update Submodules
        run: git submodule update --init --recursive

      - name: Setup MSBuild and add to PATH
        uses: microsoft/setup-msbuild@v1.1
        
      - name: Install Cache
        uses: actions/cache@v2
        id: install-cache
        with:
          path: |
            ./Engine/Build/Windows/Ninja/*
            ./Engine/Build/Windows/vswhere/*
          key: install-cache-v0
        
      - name: Install
        if: steps.install-cache.outputs.cache-hit != 'true'
        working-directory: .\Engine\Build\Windows\
        run: |
          .\InstallNinja.bat
          .\InstallVSWhere.bat
          
      - name: Build
        working-directory: .\Engine\Build\Windows\
        run: .\Build.bat ${{ matrix.platform }} ${{ matrix.configuration }} ${{ matrix.cxx_standard }}

      - name: Test
        working-directory: .\Engine\Build\Windows\build
        run: .\Test.bat ${{ matrix.platform }} ${{ matrix.configuration }} ${{ matrix.cxx_standard }}

  linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        compiler:
          - { cc: "gcc-10",   cxx: "g++-10"     }
          - { cc: "gcc-9",    cxx: "g++-9"      }
          - { cc: "clang-12", cxx: "clang++-12" }
          - { cc: "clang-11", cxx: "clang++-11" }
          - { cc: "clang-10", cxx: "clang++-10" }
        cxx_standard: [17, 20]
        configuration: [Debug, Release]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install package
        run: |
          sudo apt-get install ninja-build

      - name: Make build directory
        working-directory: ./Engine/Build
        run: |
          mkdir Linux

      - name: Configure CMake
        working-directory: ./Engine/Build/Linux/
        run: |
          cmake \
          -GNinja \
          -H${{github.workspace}}/Engine/Source \
          -Bbuild \
          -DCMAKE_CXX_COMPILER=${{ matrix.compiler.cxx }} \
          -DCMAKE_C_COMPILER=${{ matrix.compiler.cc }} \
          -DCMAKE_CXX_STANDARD=${{ matrix.cxx_standard }} \
          -DCMAKE_BUILD_TYPE=${{ matrix.configuration }}

      - name: Build
        run: |
          cmake --build build --config ${{ matrix.configuration }}

      - name: Test
        working-directory: ./Engine/Build/Linux/build
        run: |
          ctest -j 4 -C ${{ matrix.configuration }}
